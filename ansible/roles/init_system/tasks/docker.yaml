---
- name: Pip install docker
  pip:
    name: docker

- name: Add apt key for docker
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_lsb.id | lower }}/gpg"
    state: present

- name: Get hardware architecture
  shell: dpkg --print-architecture
  register: hardware_architecture

- set_fact:
    hardware_architecture={{ hardware_architecture.stdout }}

- name: Add apt repository for docker
  apt_repository:
    filename: docker
    repo: "deb [arch={{ hardware_architecture }}] https://download.docker.com/linux/{{ ansible_lsb.id | lower }} {{ ansible_lsb.codename | lower }} stable"
    state: present
    update_cache: yes

- name: Purge apt docker docker-engine docker.io lxc-docker
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - lxc-docker
    state: absent
    purge: yes
    update_cache: yes

- name: Install apt apt-transport-https ca-certificates curl software-properties-common
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: latest
    install_recommends: no
    update_cache: yes

- name: Install apt containerd.io docker-ce docker-ce-cli
  apt:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
    state: latest
    install_recommends: no
    update_cache: yes

- name: Download docker-compose
  shell: "sudo curl -L 'https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-$(uname -s)-$(uname -m)' -o /usr/local/bin/docker-compose"
  when: ansible_architecture != "armv7l" or ansible_architecture != "aarch64"

- name: Delete docker files from remote host
  file:
    path: "{{ target_tmp_docker_dir }}"
    state: absent

- name: Download docker-compose-aarch64-builder
  git:
    repo: https://github.com/rhoriguchi/docker-compose-aarch64.git
    dest: "{{ target_tmp_docker_dir }}"
  when: ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

- name: Comment line in docker-compose-aarch64-builder Dockerfile
  lineinfile:
    path: "{{ target_tmp_docker_dir }}/Dockerfile"
    regexp: '^COPY ./vendor/qemu-bin /usr/bin/'
    line: "# COPY ./vendor/qemu-bin /usr/bin/"
  when: ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

- name: Comment line in docker-compose-aarch64-builder Dockerfile
  lineinfile:
    path: "{{ target_tmp_docker_dir }}/Dockerfile"
    regexp: '^RUN \[ "cross-build-start" \]'
    line: '# RUN [ "cross-build-start" ]'
  when: ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

- name: Build docker-compose-aarch64-builder image
  docker_image:
    name: docker-compose-aarch64-builder
    path: "{{ target_tmp_docker_dir }}"
    force: yes
  when: ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

# TODO use version from config

- name: Create docker-compose-aarch64-builder container
  shell: >-
    docker run
    --mount src='/usr/local/bin/docker-compose',target=//dist,type=bind
    --rm
    docker-compose-aarch64-builder
  when: ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

- name: Delete docker files from remote host
  file:
    path: "{{ target_tmp_docker_dir }}"
    state: absent

- name: Change permissions for docker-compose +x
  shell: sudo chmod +x /usr/local/bin/docker-compose

- name: Remove all unused ressources
  shell: docker system prune --all --force
